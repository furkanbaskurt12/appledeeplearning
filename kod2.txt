import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.applications import VGG16
from tensorflow.keras.layers import Flatten, Dense
from tensorflow.keras.models import Model

# Define the data generator
datagen = ImageDataGenerator()

# Load the data from the specified folder
train_generator = datagen.flow_from_directory(
    '/content/drive/MyDrive/apple',
    target_size=(224, 224),
    batch_size=32,
    class_mode='categorical')

# Define the model
base_model = VGG16(weights='imagenet', include_top=False)
x = base_model.output
x = Flatten()(x)
predictions = Dense(4, activation='softmax')(x)
model = Model(inputs=base_model.input, outputs=predictions)

# Compile the model
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(train_generator, epochs=10)

# Save the model
model.save('/content/drive/MyDrive/apple_model.h5')

# Load the model
model = tf.keras.models.load_model('/content/drive/MyDrive/apple_model.h5')

# Predict the type of a new image
import cv2
import numpy as np
image = cv2.imread('/content/drive/MyDrive/apple/new_image.jpg')
image = cv2.resize(image, (224, 224))
image = np.expand_dims(image, axis=0)
prediction = model.predict(image)
predicted_class = np.argmax(prediction)

# Print the predicted class
if predicted_class == 0:
  print('braeburn')
elif predicted_class == 1:
  print('golden')
elif predicted_class == 2:
  print('granny smith')
elif predicted_class == 3:
  print('red')
else:
  print('apple red delicious')